- name: Get checksum
  when: argo_checksum_verify
  block:

  - name: Registering checksums related vars
    ansible.builtin.set_fact:
      _github_api_headers: "{{ {'GITHUB_TOKEN': lookup('ansible.builtin.env', 'GITHUB_TOKEN')} if (lookup('ansible.builtin.env', 'GITHUB_TOKEN')) else {} }}"

  # on macos ansible host will require "export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES"
  - name: Get checksums list
    ansible.builtin.set_fact:
      __argo_checksums: "{{ lookup('url', argo_checksum_url, headers=_github_api_headers, wantlist=True) | list }}"
    run_once: true
    until: __argo_checksums is search(argo_release_binary_name)
    retries: 10

  - name: Get checksum for {{ argo_release_binary_name }}
    ansible.builtin.set_fact:
      __argo_checksum: "{{ item.split(' ')[0] }}"
    loop: "{{ __argo_checksums }}"
    when:
    - argo_release_binary_name in item

# - name: Installing Argo CD CLI
#   ansible.builtin.get_url:
#     url: '{{ argo_release_url }}'
#     dest: '{{ argo_bin_dst }}/{{ argo_bin }}'
#     checksum: "{{ 'sha256:' + __argo_checksum if argo_checksum_verify else '' }}"
#     mode: '0755'

- name: Ensure gzip is installed
  ansible.builtin.package:
    name: gzip
    state: present

- name: Creating extraction dir {{ argo_extraction_path }}
  ansible.builtin.file:
    path: '{{ argo_extraction_path }}'
    state: directory
    mode: '0755'

- name: Getting release archive
  ansible.builtin.get_url:
    url: '{{ argo_release_url }}'
    dest: '{{ argo_extraction_path }}/{{ argo_release_archive_name }}'
    checksum: "{{ 'sha256:' + __argo_checksum if argo_checksum_verify else '' }}"
    mode: '0644'
  register: _argo_archive_download_status
  retries: 3
  delay: 10
  until: _argo_archive_download_status is succeeded

- name: Extracting archive
  ansible.builtin.command:
    cmd: gunzip {{ argo_release_archive_name }}
  args:
    chdir: '{{ argo_extraction_path }}'

- name: Installing argo-workflows CLI
  ansible.builtin.copy:
    src: '{{ argo_extraction_path }}/argo-{{ argo_sys }}-{{ argo_arch }}'
    dest: '{{ argo_bin_dst }}/{{ argo_bin }}'
    mode: '0755'
    remote_src: true

- name: Deleting release artifacts
  ansible.builtin.file:
    path: '{{ item }}'
    state: absent
  loop:
  - '{{ argo_extraction_path }}'
