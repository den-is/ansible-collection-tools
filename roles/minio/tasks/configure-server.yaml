---
- name: Create Minio group
  ansible.builtin.group:
    name: "{{ minio_group }}"
    state: present
    system: true

- name: Create Minio user
  ansible.builtin.user:
    name: "{{ minio_user }}"
    group: "{{ minio_group }}"
    system: true
    shell: /usr/sbin/nologin

- name: Create Minio config dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: "0750"
  loop:
  - "{{ minio_etc_dir }}"
  - "{{ minio_cert_dir }}"
  - "{{ minio_policy_dir }}"

- name: Create Minio data storage dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: "0750"
  loop: "{{ minio_server_datadirs }}"

- name: Generate the Minio server envfile
  ansible.builtin.template:
    src: minio.env.j2
    dest: "{{ minio_server_envfile }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_group }}"
    mode: "0640"
  notify: Restart minio

- name: Create the Minio Server systemd service
  ansible.builtin.template:
    src: minio.service.j2
    dest: "/etc/systemd/system/minio.service"
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
  - Reload systemd
  - Restart minio

- name: Copy SSL private key file
  ansible.builtin.copy:
    dest: "{{ minio_cert_dir }}/private.key"
    content: "{{ minio_key_b64 | b64decode }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_user }}"
    mode: "0644"
  become: true
  when: minio_enable_tls
  notify: Restart minio

- name: Copy cert file
  ansible.builtin.copy:
    dest: "{{ minio_cert_dir }}/public.crt"
    content: "{{ minio_cert_b64 | b64decode }}"
    owner: "{{ minio_user }}"
    group: "{{ minio_user }}"
    mode: "0644"
  become: true
  when: minio_enable_tls
  notify: Restart minio

- name: Enable Minio Server service
  ansible.builtin.systemd_service:
    name: minio
    state: "{{ minio_service_state }}"
    enabled: "{{ minio_service_enabled }}"
  tags: config
