- name: Get zsh path
  ansible.builtin.command: command -v zsh
  register: __get_zsh_path_task
  changed_when: false
  failed_when: __get_zsh_path_task.rc != 0

- name: Set zsh path fact
  ansible.builtin.set_fact:
    zsh_path: '{{ __get_zsh_path_task.stdout }}'
  when: __get_zsh_path_task is succeeded

- name: Checking if user "{{ omz_user.name }}" exists # noqa: name[template]
  ansible.builtin.getent:
    database: passwd
    key: "{{ omz_user.name }}"
    split: ":"
    fail_key: true

- name: Seting facts about the user "{{ omz_user.name }}"
  ansible.builtin.set_fact:
    __omz_target_user_home: "{{ ansible_facts.getent_passwd[omz_user.name][4] | default('', true) }}"

- name: Clonning oh-my-zsh repo for "{{ omz_user.name }}"
  ansible.builtin.git:
    repo: "{{ omz_git_repo }}"
    depth: 1
    dest: "{{ __omz_target_user_home }}/.oh-my-zsh"
    version: "{{ omz_git_ref }}"
  become: true
  become_user: "{{ omz_user.name }}"

- name: Create user fpath directories for user "{{ omz_user.name }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0750'
  become: true
  become_user: "{{ omz_user.name }}"
  loop:
  - "{{ __omz_target_user_home }}/.oh-my-zsh/completions"
  - "{{ __omz_target_user_home }}/.oh-my-zsh/functions"

- name: Set ~/.oh-my-zsh permissions for user "{{ omz_user.name }}"
  ansible.builtin.file:
    path: "{{ __omz_target_user_home }}/.oh-my-zsh"
    state: directory
    mode: '0755'
  become: true
  become_user: "{{ omz_user.name }}"

- name: Checking if ~/.zshrc exists for "{{ omz_user.name }}"
  ansible.builtin.stat:
    path: "{{ __omz_target_user_home }}/.zshrc"
  register: __existing_zshrc
  ignore_errors: true
  changed_when: false

- name: Adding default ~/.zshrc for "{{ omz_user.name }}"
  when: default_zshrc
  block:
  - name: Putting ~/.zshrc for "{{ omz_user.name }}"
    ansible.builtin.copy:
      src: "{{ __omz_target_user_home }}/.oh-my-zsh/templates/zshrc.zsh-template"
      dest: "{{ __omz_target_user_home }}/.zshrc"
      mode: '0640'
      remote_src: true
    become: true
    become_user: "{{ omz_user.name }}"
    when: not __existing_zshrc.stat.exists or overwrite_zshrc

  - name: Setting ZSH theme "{{ omz_theme }}"
    ansible.builtin.lineinfile:
      path: "{{ __omz_target_user_home }}/.zshrc"
      regexp: ^ZSH_THEME=
      line: ZSH_THEME="{{ omz_user.omz_theme | default(omz_theme) }}"
    become: true
    become_user: "{{ omz_user.name }}"

- name: Configuring custom .zshrc
  ansible.builtin.template:
    src: "{{ omz_zshrc_template_file }}"
    dest: "{{ __omz_target_user_home }}/.zshrc"
    mode: '0640'
  become: true
  become_user: "{{ omz_user.name }}"
  when:
  - not default_zshrc

- name: Setting zsh as default shell for the user "{{ omz_user.name }}"
  ansible.builtin.user:
    name: "{{ omz_user.name }}"
    shell: "{{ zsh_path }}"
  become: true
